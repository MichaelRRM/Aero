using Aero.MDH.DatabaseAccess.BusinessEntities.Base;
using Aero.MDH.DatabaseAccess.BusinessEntities.DataServices.Base;

namespace Aero.MDH.DatabaseAccess.BusinessEntities.Savers.Base;

public class IdMasterSaver<TBusinessEntity, TIdMaster> : IIdMasterSaver<TBusinessEntity> where TBusinessEntity : AbstractBusinessEntity
{
    private readonly AutoGenerated.MdhDbContext _mdhDbContext;

    public IdMasterSaver(AutoGenerated.MdhDbContext mdhDbContext)
    {
        _mdhDbContext = mdhDbContext;
    }

    public async Task<SaveResult<TBusinessEntity>> CreateIdMasterAsync(List<TBusinessEntity> businessEntitiesToCreate)
    {
        var dbModels = businessEntitiesToCreate.Select(b => new Id)

        await _mdhDbContext.GlobalIdMasters.AddRangeAsync(businessModelsAndGlobalIds.Select(bm => bm.GlobalIdMaster));

        foreach (var businessModelsAndGlobalId in businessModelsAndGlobalIds)
        {
            businessModelsAndGlobalId.BusinessEntity.Id = businessModelsAndGlobalId.GlobalIdMaster.GlobalId;
        }

        return new SaveResult<TBusinessEntity>(true, businessEntitiesToCreate);
    }
}